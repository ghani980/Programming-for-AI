FRONT END CODE
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Iris Flower Species Prediction</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f9;
        }
        .container {
            width: 50%;
            margin: 50px auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        h1 {
            text-align: center;
            color: #333;
        }
        form {
            display: flex;
            flex-direction: column;
        }
        label {
            margin-bottom: 8px;
            font-weight: bold;
        }
        input {
            padding: 8px;
            margin-bottom: 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .result {
            margin-top: 20px;
            text-align: center;
            font-size: 1.2em;
            font-weight: bold;
        }
    </style>
</head>
<body>

<div class="container">
    <h1>Iris Flower Species Prediction</h1>
    <form method="POST">
        <label for="sepal_length">Sepal Length (cm):</label>
        <input type="text" id="sepal_length" name="sepal_length" required>

        <label for="sepal_width">Sepal Width (cm):</label>
        <input type="text" id="sepal_width" name="sepal_width" required>

        <label for="petal_length">Petal Length (cm):</label>
        <input type="text" id="petal_length" name="petal_length" required>

        <label for="petal_width">Petal Width (cm):</label>
        <input type="text" id="petal_width" name="petal_width" required>

        <button type="submit">Predict Species</button>
    </form>

    {% if prediction %}
        <div class="result">
            Predicted Species: {{ prediction }}
        </div>
    {% endif %}
</div>

</body>
</html>

BACK END CODE
from flask import Flask, render_template, request
import numpy as np
import pandas as pd
from sklearn.datasets import load_iris
from sklearn.neighbors import KNeighborsClassifier
import os

# Initialize the Flask application
app = Flask(__name__, template_folder=os.path.join(os.getcwd(), 'templates'))

# Load the Iris dataset
iris = load_iris()
X = pd.DataFrame(iris.data, columns=iris.feature_names)
y = pd.Series(iris.target)

# Initialize the KNN model
model = KNeighborsClassifier(n_neighbors=3)
model.fit(X, y)

# Function to predict the species based on the input features
def predict_species(sepal_length, sepal_width, petal_length, petal_width):
    # Prepare the input data
    input_data = np.array([[sepal_length, sepal_width, petal_length, petal_width]])
    prediction = model.predict(input_data)
    
    # Map the prediction to species name
    species = iris.target_names[prediction][0]
    return species

# Define the route for the home page
@app.route('/', methods=['GET', 'POST'])
def home():
    prediction = None
    error_message = None
    
    if request.method == 'POST':
        try:
            # Get the input values from the form
            sepal_length = float(request.form['sepal_length'])
            sepal_width = float(request.form['sepal_width'])
            petal_length = float(request.form['petal_length'])
            petal_width = float(request.form['petal_width'])

            # Get the predicted species
            prediction = predict_species(sepal_length, sepal_width, petal_length, petal_width)

        except ValueError:
            error_message = "Invalid input. Please enter numeric values."
    
    return render_template('index.html', prediction=prediction, error_message=error_message)

if __name__ == '__main__':
    app.run(debug=True)

